---
# roles/addkey/tasks/main.yml


# Example using key data from a local file on the management machine
- authorized_key: user={{ ansible_user }} key="{{ lookup('file', '/Users/johnconor/.ssh/id_rsa.pub') }}"

## Using github url as key source
#- authorized_key: user=charlie key=https://github.com/charlie.keys
#
## Using alternate directory locations:
#- authorized_key:
#    user: charlie
#    key: "{{ lookup('file', '/home/charlie/.ssh/id_rsa.pub') }}"
#    path: '/etc/ssh/authorized_keys/charlie'
#    manage_dir: no
#
## Using with_file
#- name: Set up authorized_keys for the deploy user
#  authorized_key: user=deploy key="{{ item }}"
#  with_file:
#    - public_keys/doe-jane
#    - public_keys/doe-john
#
## Using key_options:
#- authorized_key:
#    user: charlie
#    key:  "{{ lookup('file', '/home/charlie/.ssh/id_rsa.pub') }}"
#    key_options: 'no-port-forwarding,from="10.0.1.1"'
#
## Using validate_certs:
#- authorized_key: user=charlie key=https://github.com/user.keys validate_certs=no
#
## Set up authorized_keys exclusively with one key
#- authorized_key: user=root key="{{ item }}" state=present exclusive=yes
#  with_file:
#    - public_keys/doe-jane
#
## Copies the key from the user who is running ansible to the remote machine
#- set_fact:
#    my_ssh_key: "{{ lookup('env','HOME') }}/.ssh/id_rsa.pub"
#
#- authorized_key: user=ubuntu key="{{ lookup('file', my_ssh_key) }}"
#  sudo: yes